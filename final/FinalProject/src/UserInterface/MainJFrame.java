/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import UserInterface.Patient.Register;
import DB4OUtil.DB4OUtil;
import His.HisSystem;
import His.Network.Enterprise.Enterprise;
import His.Network.Network;
import His.Network.Organization.Organization;
import His.Network.WorkQueue.MEWork.MedicineDictionary;
import His.Network.WorkQueue.MEWork.MedicineStorage;
import His.UserAccount.UserAccount;
import UserInterface.ModifyAccount.ModifyAccount;
import de.javasoft.plaf.synthetica.SyntheticaBlueLightLookAndFeel;


import java.awt.CardLayout;
import java.awt.EventQueue;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;

/**
 *
 * @author 52909
 */
public class MainJFrame extends javax.swing.JFrame {
    
    private HisSystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    /**
     * Creates new form MainJFrame
     */
    
    public MainJFrame() {
        initComponents();
        system = dB4OUtil.retrieveSystem();
        this.setSize(800, 600);
        this.logoutBTN.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        rightPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userNameInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordInput = new javax.swing.JPasswordField();
        loginBTN = new javax.swing.JButton();
        logoutBTN = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rightPanel.setMaximumSize(new java.awt.Dimension(900, 500));
        rightPanel.setMinimumSize(new java.awt.Dimension(900, 500));
        rightPanel.setPreferredSize(new java.awt.Dimension(900, 500));
        rightPanel.setLayout(new java.awt.CardLayout());
        jSplitPane1.setRightComponent(rightPanel);

        loginPanel.setMinimumSize(new java.awt.Dimension(200, 35));
        loginPanel.setName(""); // NOI18N
        loginPanel.setPreferredSize(new java.awt.Dimension(200, 510));

        jLabel1.setText("UserName");
        loginPanel.add(jLabel1);

        userNameInput.setMinimumSize(new java.awt.Dimension(30, 25));
        userNameInput.setPreferredSize(new java.awt.Dimension(100, 25));
        loginPanel.add(userNameInput);

        jLabel2.setText("Password");
        loginPanel.add(jLabel2);

        passwordInput.setMinimumSize(new java.awt.Dimension(100, 25));
        passwordInput.setPreferredSize(new java.awt.Dimension(100, 25));
        passwordInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordInputActionPerformed(evt);
            }
        });
        loginPanel.add(passwordInput);

        loginBTN.setText("login");
        loginBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBTNActionPerformed(evt);
            }
        });
        loginPanel.add(loginBTN);

        logoutBTN.setText("logout");
        logoutBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBTNActionPerformed(evt);
            }
        });
        loginPanel.add(logoutBTN);

        jButton1.setText("Patient Register");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        loginPanel.add(jButton1);

        jSplitPane1.setLeftComponent(loginPanel);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBTNActionPerformed
        // TODO add your handling code here:
        // Get user name
        String userName = this.userNameInput.getText();
        // Get Password
        char[] passwordCharArray = this.passwordInput.getPassword();
        String password = String.valueOf(passwordCharArray);
        
        //Step1: Check in the system admin user account directory if you have the user
        UserAccount userAccount=system.getUserAccountDirectory().authenticateUser(userName, password);
        
        Enterprise inEnterprise=null;
        Organization inOrganization=null;
        
        if(userAccount==null){
            //Step 2: Go inside each network and check each enterprise
            for(Map.Entry<String, Network> entry:system.getNetwork().entrySet()){
                //Step 2.a: check against each enterprise
                Network network=entry.getValue();
                
                for(Map.Entry<String, Enterprise> entryEnter:network.getEnterpriseDirectory().getEnterpriseList().entrySet()){
                //Step 2.a: check against each enterprise
                Enterprise enterprise=entryEnter.getValue();
                    userAccount=enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                    if(userAccount==null){
                       //Step 3:check against each organization for each enterprise
                        
                        for(Map.Entry<String, Organization> entryOrganization:enterprise.getOrganizationDirectory().getOrganizationList().entrySet()){
                //Step 2.a: check against each enterprise
                            Organization organization=entryOrganization.getValue();
                            userAccount=organization.getUserAccountDirectory().authenticateUser(userName, password);
                            if(userAccount!=null){
                               inEnterprise=enterprise;
                               inOrganization=organization;
                               break;
                           }
                       }
                        
                    }
                    else{
                       inEnterprise=enterprise;
                       break;
                    }
                    if(inOrganization!=null){
                        break;
                    }  
                }
                if(inEnterprise!=null){
                    break;
                }
            }
        }
        
        if(userAccount==null){
            JOptionPane.showMessageDialog(null, "Invalid credentials");
            return;
        }
        else{
            
            CardLayout layout=(CardLayout)this.rightPanel.getLayout();
            this.rightPanel.add("workArea",userAccount.getRole().createWorkArea(this.rightPanel, userAccount, inOrganization, inEnterprise, system));
            layout.next(this.rightPanel);
        }
        
        this.loginBTN.setEnabled(false);
        this.logoutBTN.setEnabled(true);
        this.userNameInput.setEnabled(false);
        this.passwordInput.setEnabled(false);
        this.jButton1.setEnabled(false);
    }//GEN-LAST:event_loginBTNActionPerformed

    private void passwordInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordInputActionPerformed

    private void logoutBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBTNActionPerformed
        // TODO add your handling code here:
        this.logoutBTN.setEnabled(false);
        this.userNameInput.setEnabled(true);
        this.passwordInput.setEnabled(true);
        this.loginBTN.setEnabled(true);
        this.jButton1.setEnabled(true);
        this.userNameInput.setText("");
        this.passwordInput.setText("");

        this.rightPanel.removeAll();
        JPanel blankJP = new JPanel();
        this.rightPanel.add("blank", blankJP);
        CardLayout crdLyt = (CardLayout) this.rightPanel.getLayout();
        crdLyt.next(this.rightPanel);
        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_logoutBTNActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        this.jButton1.setEnabled(false);
//        this.loginBTN.setEnabled(false);
//        this.logoutBTN.setEnabled(false);
        CardLayout layout=(CardLayout)this.rightPanel.getLayout();
        this.rightPanel.add("register",new Register(this.system,this.rightPanel));
        layout.next(rightPanel);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try{
            UIManager.setLookAndFeel(new SyntheticaBlueLightLookAndFeel());
            
        }
        catch(Exception e){
            e.printStackTrace();

        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton loginBTN;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton logoutBTN;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JTextField userNameInput;
    // End of variables declaration//GEN-END:variables
}
