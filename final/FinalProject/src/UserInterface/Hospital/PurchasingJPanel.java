/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital;

import His.HisSystem;
import His.Network.Enterprise.Enterprise;
import His.Network.Enterprise.HospitalE;
import His.Network.Enterprise.MedicalEnterE;
import His.Network.Network;
import His.Network.Organization.Organization;
import His.Network.WorkQueue.GeneralAccountingWork;
import His.Network.WorkQueue.HosWork.PurchasingWork;
import His.Network.WorkQueue.MEWork.MedicineStorage;
import His.Network.WorkQueue.PatientRegister;
import His.Network.WorkQueue.WorkRequest;
import His.UserAccount.UserAccount;
import UserInterface.ModifyAccount.ModifyAccount;
import java.awt.CardLayout;
import java.util.Date;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zhangqiushi
 */
public class PurchasingJPanel extends javax.swing.JPanel {
    private JPanel rightPanel;
    private UserAccount account;
    private Organization organization;
    private HisSystem business;
    private Enterprise enterprise;
    

    /**
     * Creates new form PurchasingJPanel
     */
    public PurchasingJPanel(JPanel rightPanel) {
        initComponents();
        this.rightPanel = rightPanel;
    }

    public PurchasingJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, HisSystem business) {
        initComponents();
        this.companyCombo.removeAllItems();
        this.areaCombo.removeAllItems();
        this.medicineCombo.removeAllItems();
        this.rightPanel=userProcessContainer;
        this.account=account;
        this.business=business;
        this.organization=organization; 
        this.enterprise=enterprise;
        poptable();
        this.popAreaCombo();
        
        //To change body of generated methods, choose Tools | Templates.
    }
    public void poptable(){
        DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest request : this.organization.getWorkQueue().getWorkRequestList()){
            PurchasingWork add=(PurchasingWork)request;
            Object[] row = new Object[3];
            row[0] = add.getMedicalEnter();
            row[1] = add.getMedicineStorage(); 
            row[2] = add;
            model.addRow(row);
        }
    }
    public void popAreaCombo(){
        areaCombo.removeAllItems();
        for(Map.Entry<String, Network> entry:business.getNetwork().entrySet()){
                //Step 2.a: check against each enterprise
            Network network=entry.getValue();
            areaCombo.addItem(network);
        }
    }
    public void popCompanyCombo(Network network){
        companyCombo.removeAllItems();
        //System.out.print(network.getName());
        for(Map.Entry<String, Enterprise> entryEnter:network.getEnterpriseDirectory().getEnterpriseList().entrySet()){
                //Step 2.a: check against each enterprise
            Enterprise ent=entryEnter.getValue();
            if(ent.getEnterpriseType()!=null)
            if(ent.getEnterpriseType().equals(Enterprise.EnterpriseType.MedicalEnterprise)){
                companyCombo.addItem(ent);
            }
        }
    }
    public void popMedicine(Enterprise enterprise){
        this.medicineCombo.removeAllItems();
        for (Map.Entry<String, MedicineStorage> entry : enterprise.getStorage().getMedicineStorageMap().entrySet()) {              
            medicineCombo.addItem(entry.getValue());                 
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        amountInput = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        areaCombo = new javax.swing.JComboBox();
        companyCombo = new javax.swing.JComboBox();
        medicineCombo = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Company", "Medicine", "Message"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jLabel3.setText("Order");

        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Company");

        jLabel5.setText("Area");

        jLabel6.setText("Medicine");

        jLabel7.setText("Amount");

        areaCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        areaCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                areaComboItemStateChanged(evt);
            }
        });

        companyCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        companyCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                companyComboItemStateChanged(evt);
            }
        });

        medicineCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton3.setText("View Detail");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Modify Password");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(companyCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(areaCombo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(medicineCombo, 0, 139, Short.MAX_VALUE)
                                            .addComponent(amountInput)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton5))
                .addGap(28, 28, 28)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(medicineCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(amountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(areaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(companyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void areaComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_areaComboItemStateChanged
        // TODO add your handling code here:
        if ((Network)this.areaCombo.getSelectedItem() != null){
            this.popCompanyCombo((Network)this.areaCombo.getSelectedItem());
        }
        
    }//GEN-LAST:event_areaComboItemStateChanged

    private void companyComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_companyComboItemStateChanged
        // TODO add your handling code here:
        if ((Enterprise)this.companyCombo.getSelectedItem() != null){
            this.popMedicine((Enterprise)this.companyCombo.getSelectedItem());
        }
        
    }//GEN-LAST:event_companyComboItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        PurchasingWork purchase=new PurchasingWork();
        purchase.setMedicalEnter((MedicalEnterE)this.companyCombo.getSelectedItem());
        purchase.setHospital((HospitalE)this.enterprise);
        purchase.setMedicineStorage((MedicineStorage)this.medicineCombo.getSelectedItem());
        try{
            int amount;
            amount=Integer.parseInt(amountInput.getText());
            System.out.print(-(amount*((MedicineStorage)this.medicineCombo.getSelectedItem()).getPrice()));
            GeneralAccountingWork garequest=new GeneralAccountingWork( -(amount*((MedicineStorage)this.medicineCombo.getSelectedItem()).getPrice()));
            garequest.setStatus("pending");
            garequest.setMessage("An Order");
            for(Map.Entry<String, Organization> entryOrganization:enterprise.getOrganizationDirectory().getOrganizationList().entrySet()){
                    //Step 2.a: check against each enterprise
                Organization org=entryOrganization.getValue();
                if(org.getOrganizationtype()!=null){
                    if(org.getOrganizationtype().equals(Organization.Type.GeneralAccounting)){
                        org.getWorkQueue().getWorkRequestList().add(garequest);
                    }
                }
            }
            if(amount <= 0)
            {
                JOptionPane.showMessageDialog(null, "Amount must be a positive integer");
                return;
            }
            else
            {
                purchase.setAmount(amount);
                purchase.setStatus("waiting");
                purchase.setMessage("purchase!");
                purchase.setRequestDate(new Date());
                this.organization.getWorkQueue().getWorkRequestList().add(purchase);
                for(Map.Entry<String, Organization> entryOrganization:((MedicalEnterE)this.companyCombo.getSelectedItem()).getOrganizationDirectory().getOrganizationList().entrySet()){
                //Step 2.a: check against each enterprise
                    Organization org=entryOrganization.getValue();
                    if(org.getOrganizationtype()!=null)
                        if(org.getOrganizationtype().equals(Organization.Type.Export))
                            org.getWorkQueue().getWorkRequestList().add(purchase);
                }
                this.poptable();    
            }
            
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Amount must be a positive integer");
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow=jTable1.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from table","warning",JOptionPane.WARNING_MESSAGE);


        }else{
            PurchasingWork request=(PurchasingWork)jTable1.getValueAt(selectedRow,2);
            if(request.getStatus().equals("pending")){
                request.setStatus("completed");
                request.setMessage("received");
                this.enterprise.getStorage().storeMedicine(request.getMedicineStorage());
            }
        }
        this.poptable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         int selectedRow=jTable1.getSelectedRow();
          if(selectedRow<0){
          JOptionPane.showMessageDialog(null,"Please select a row from table","warning",JOptionPane.WARNING_MESSAGE);
          
          
          }else{
               PurchasingWork result=(PurchasingWork)jTable1.getValueAt(selectedRow,2);
                PurchasingDetailJPanel panel=new PurchasingDetailJPanel(rightPanel,result);
                rightPanel.add("PurchasingDetailJPanel",panel);
                CardLayout layout=(CardLayout)rightPanel.getLayout();
                layout.next(rightPanel);
          }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        CardLayout layout=(CardLayout)this.rightPanel.getLayout();
        this.rightPanel.add("modify",new ModifyAccount(this.account,this.rightPanel));
        layout.next(rightPanel);
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountInput;
    private javax.swing.JComboBox areaCombo;
    private javax.swing.JComboBox companyCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox medicineCombo;
    // End of variables declaration//GEN-END:variables
}
